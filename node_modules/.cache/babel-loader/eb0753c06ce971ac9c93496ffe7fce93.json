{"ast":null,"code":"var _jsxFileName = \"F:\\\\CS\\\\CODSOFT\\\\mark\\\\markdown-previewer\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { marked } from \"marked\";\nimport useLocalStorage from \"./useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [code, setCode] = useLocalStorage(\"Messages\", \"## Hello\");\n  const [compiled, setCompiled] = useLocalStorage(\"data\", '<h2 id=\"hello\">Hello</h2>');\n  const [writes, setWrite] = useState([]);\n  useEffect(() => {\n    const response = fetch('https://www.markdownguide.org/api/v1/basic-syntax.json').then(response => response.json()).then(data => {\n      console.log(data);\n      setWrite(data);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }, []);\n  const [tabIndex, setTabIndex] = useState(1);\n  const [hide, hidePreview] = useState(true);\n\n  const openMD = () => {\n    console.log(0);\n    hidePreview(true);\n  };\n\n  const openPreview = () => {\n    console.log(0);\n    hidePreview(false);\n  };\n\n  const openDocs = () => {\n    console.log(\"Docs\");\n    hidePreview(true);\n  };\n\n  const handleChange = e => {\n    setCode(e.target.value);\n    setCompiled(marked.parse(e.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MarkDown Previewer React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTabIndex(1),\n          className: \"btn\",\n          children: \"MarkDown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTabIndex(2),\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTabIndex(3),\n          className: \"btn\",\n          children: \"Docs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), tabIndex === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: handleChange,\n          value: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 32\n      }, this), tabIndex === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: compiled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 32\n      }, this), tabIndex === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [writes.map(write => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"textarea\",\n              children: write.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: write.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this)]\n          }, write.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 18\n          }, this);\n        }), \"//  \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: writes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"o6NAh7B6Yf31v1DpmVtSuncUAZc=\", false, function () {\n  return [useLocalStorage, useLocalStorage];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/CS/CODSOFT/mark/markdown-previewer/src/App.js"],"names":["React","useState","useEffect","marked","useLocalStorage","App","code","setCode","compiled","setCompiled","writes","setWrite","response","fetch","then","json","data","console","log","catch","err","message","tabIndex","setTabIndex","hide","hidePreview","openMD","openPreview","openDocs","handleChange","e","target","value","parse","map","write","title","body","id"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { marked } from \"marked\";\r\nimport useLocalStorage from \"./useLocalStorage\";\r\n\r\nconst App = () => {\r\n  const [code, setCode] = useLocalStorage(\"Messages\", \"## Hello\");\r\n  const [compiled, setCompiled] = useLocalStorage(\r\n    \"data\",\r\n    '<h2 id=\"hello\">Hello</h2>'\r\n  );\r\n  const [writes, setWrite] = useState([]);\r\n  useEffect(() => {\r\n    const response=fetch('https://www.markdownguide.org/api/v1/basic-syntax.json')\r\n       .then((response) => response.json())\r\n       .then((data) => {\r\n          console.log(data);\r\n          setWrite(data);\r\n       })\r\n       .catch((err) => {\r\n          console.log(err.message);\r\n       }); \r\n }, []);\r\n  const [tabIndex, setTabIndex] = useState(1);\r\n  const [hide, hidePreview] = useState(true);\r\n\r\n  const openMD = () => {\r\n    console.log(0);\r\n    hidePreview(true);\r\n  };\r\n\r\n  const openPreview = () => {\r\n    console.log(0);\r\n    hidePreview(false);\r\n  };\r\n\r\n  const openDocs = () => {\r\n    console.log(\"Docs\");\r\n    hidePreview(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setCode(e.target.value);\r\n    setCompiled(marked.parse(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>MarkDown Previewer React App</h1>\r\n      <div className=\"container\">\r\n        <div className=\"btns\">\r\n          <button onClick={() => setTabIndex(1)} className=\"btn\">\r\n            MarkDown\r\n          </button>\r\n          <button onClick={() => setTabIndex(2)}>Preview</button>\r\n          <button  onClick={() => setTabIndex(3)} className=\"btn\">\r\n            Docs\r\n          </button>\r\n        </div>\r\n        {/* {hide ? (\r\n          <div>\r\n            <textarea onChange={handleChange} value={code} />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <textarea value={compiled} />\r\n          </div>\r\n        )} */}\r\n        {/* <div style={hide? {display:\"none\"} : {display:\"block\"}}>\r\n          <textarea value={data}/>\r\n        </div> */}\r\n        {\r\n            tabIndex === 1 && (<div><textarea onChange={handleChange} value={code} /></div>)}\r\n            {\r\n            tabIndex === 2 && (<div><textarea value={compiled} /></div>)}\r\n            {\r\n            tabIndex === 3 && (\r\n            <div>{writes.map((write) => {\r\n              return ( \r\n                 <div key={write.id}>\r\n                    <h2 className=\"textarea\">{write.title}</h2>\r\n                    <p>{write.body}</p>\r\n                 </div>\r\n              );\r\n           })}\r\n          //  <textarea value={writes}/> \r\n           </div>\r\n           )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}