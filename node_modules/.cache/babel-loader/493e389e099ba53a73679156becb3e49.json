{"ast":null,"code":"var _jsxFileName = \"F:\\\\CS\\\\CODSOFT\\\\mark\\\\markdown-previewer\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { marked } from \"marked\";\nimport useLocalStorage from \"./useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [code, setCode] = useLocalStorage(\"Messages\", \"## Hello\");\n  const [compiled, setCompiled] = useLocalStorage(\"data\", '<h2 id=\"hello\">Hello</h2>');\n  const [data, setData] = useState(\"doc\", \"Docments\");\n  const [showFirst, setShowFirst] = useState(false);\n  const [hide, hidePreview] = useState(true);\n\n  const openMD = () => {\n    console.log(0);\n    hidePreview(true);\n  };\n\n  const openPreview = () => {\n    console.log(0);\n    hidePreview(false);\n  };\n\n  const openDocs = () => {\n    console.log(\"Docs\");\n    hidePreview(true);\n  };\n\n  const handleChange = e => {\n    setCode(e.target.value);\n    setCompiled(marked.parse(e.target.value));\n    setData(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MarkDown Previewer React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openMD,\n          className: \"btn\",\n          children: \"MarkDown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openPreview,\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowFirst(!showFirst),\n          className: \"btn\",\n          children: \"Docs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), hide ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: handleChange,\n          value: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: compiled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"Rtbp82Igz/62yGbNGjNMUrpmTj8=\", false, function () {\n  return [useLocalStorage, useLocalStorage];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/CS/CODSOFT/mark/markdown-previewer/src/App.js"],"names":["React","useState","marked","useLocalStorage","App","code","setCode","compiled","setCompiled","data","setData","showFirst","setShowFirst","hide","hidePreview","openMD","console","log","openPreview","openDocs","handleChange","e","target","value","parse"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,eAAe,CAAC,UAAD,EAAa,UAAb,CAAvC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,eAAe,CAC7C,MAD6C,EAE7C,2BAF6C,CAA/C;AAIA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,EAAQ,UAAR,CAAhC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,IAAD,EAAOC,WAAP,IAAsBb,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMc,MAAM,GAAG,MAAM;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACAH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAHD;;AAKA,QAAMI,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACAH,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAHD;;AAKA,QAAMK,QAAQ,GAAG,MAAM;AACrBH,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAHD;;AAKA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AAC1Bf,IAAAA,OAAO,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACAf,IAAAA,WAAW,CAACN,MAAM,CAACsB,KAAP,CAAaH,CAAC,CAACC,MAAF,CAASC,KAAtB,CAAD,CAAX;AACAb,IAAAA,OAAO,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAER,MAAjB;AAAyB,UAAA,SAAS,EAAC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,OAAO,EAAEG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAS,UAAA,OAAO,EAAE,MAAMN,YAAY,CAAC,CAACD,SAAF,CAApC;AAAkD,UAAA,SAAS,EAAC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAUGE,IAAI,gBACH;AAAA,+BACE;AAAU,UAAA,QAAQ,EAAEO,YAApB;AAAkC,UAAA,KAAK,EAAEf;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADG,gBAKH;AAAA,+BACE;AAAU,UAAA,KAAK,EAAEE;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AA0BD,CAzDD;;GAAMH,G;UACoBD,e,EACQA,e;;;KAF5BC,G;AA2DN,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport { marked } from \"marked\";\r\nimport useLocalStorage from \"./useLocalStorage\";\r\n\r\nconst App = () => {\r\n  const [code, setCode] = useLocalStorage(\"Messages\", \"## Hello\");\r\n  const [compiled, setCompiled] = useLocalStorage(\r\n    \"data\",\r\n    '<h2 id=\"hello\">Hello</h2>'\r\n  );\r\n  const [data, setData] = useState(\"doc\", \"Docments\");\r\n  const [showFirst, setShowFirst] = useState(false);\r\n  const [hide, hidePreview] = useState(true);\r\n\r\n  const openMD = () => {\r\n    console.log(0);\r\n    hidePreview(true);\r\n  };\r\n\r\n  const openPreview = () => {\r\n    console.log(0);\r\n    hidePreview(false);\r\n  };\r\n\r\n  const openDocs = () => {\r\n    console.log(\"Docs\");\r\n    hidePreview(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setCode(e.target.value);\r\n    setCompiled(marked.parse(e.target.value));\r\n    setData(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>MarkDown Previewer React App</h1>\r\n      <div className=\"container\">\r\n        <div className=\"btns\">\r\n          <button onClick={openMD} className=\"btn\">\r\n            MarkDown\r\n          </button>\r\n          <button onClick={openPreview}>Preview</button>\r\n          <button  onClick={() => setShowFirst(!showFirst)} className=\"btn\">\r\n            Docs\r\n          </button>\r\n        </div>\r\n        {hide ? (\r\n          <div>\r\n            <textarea onChange={handleChange} value={code} />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <textarea value={compiled} />\r\n          </div>\r\n        )}\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}